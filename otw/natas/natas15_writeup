Natas15

Level 15 is interesting. We are only given the ability to look up a username to see if that user exists. How can we use the information available to us to gleem the password? Well to start off the username field is stored on the user table... right next to the password. That will allow us access to the password field without having to know the inner working of the database, such as what other tables there might be. We can't just ask for the password though. Looking at the source code we can see that we have no way of printing it out. We will only be shown if a user exists or not. So let's see if there is a natas16 user... There is! That was easy. Now lets build our injection. We can ask if the natas16 user exists with a password that matches a pattern. If the password doesn't fit the pattern we get the user doesn't exist. If the password does match than we get the user does exist. Easy enough. Let's try 'natas16" and password like binary "{guess}" -- "'. In mysql like is used for comparing a string to a pattern. The keyword binary ensures that we use the numerical value of the character for comparing. This way we ensure that we are comparing upper and lower cases appropriately. Apparently mysql doesn't do that by default and can see 'A' and 'a' of equivalent value in a char/varchar datatype which gave me an answer that was pretty much all upper case the first time I tried this, without binary. All we need to know next is that the flags we have been collection are alphanumerical,[0-9A-Za-z], and are 32 characters long. Now that we know how to guess and we know the attributes of a valid flag we just have to write a script to start guessing. Important to note that the character % can stand in for any substring when using like. Let's update our injection: 'natas16" and password like binary "{guess}%" -- "' and we can try on character at a time building our password a character at a time. We can make this faster using a binary search method and  using < instead of like if you're creative.
 
